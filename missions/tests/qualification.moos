ServerHost = localhost
ServerPort = 9000
Community = VICI

ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200
  Run = MOOSDB		@ NewConsole = false
  //Run = uMS			@ NewConsole = false 
  Run = pLogger   @ NewConsole = false
  Run = pShare @ NewConsole = false

  Run = pEchoVar  @ NewConsole = false
  Run = iCISCREA    @ NewConsole = false

  Run = iSonar           @ NewConsole = false
  Run = iCamera          @ NewConsole = false ~ iCamera_BOTTOM
  Run = iCamera          @ NewConsole = false ~ iCamera_SIDE
  Run = iIMU_RazorAHRS  @ NewConsole = false
  Run = iEchoSounder    @ NewConsole = false
  Run = pCameraLogger @ NewConsole = false ~ pCameraLogger_SIDE
  Run = pCameraLogger @ NewConsole = false ~ pCameraLogger_BOTTOM

  Run = pSauceCSV @ NewConsole = false
  Run = pMarinePID  @ NewConsole = false
  Run = uTimerScript  @ NewConsole = false
}


ProcessConfig = uTimerScript
{
  AppTick = 2
  CommsTick = 2

  //reset_time = end
  delay_reset = 5

  event = var=SPEED, val=2, time=0
  event = var=DESIRED_DEPTH, val=1.5, time=0
  event = var=DESIRED_SPEED, val=2, time=0
  event = var=DESIRED_HEADING, val=165, time=0

  event = var=DESIRED_SPEED, val=0.1, time=120
  event = var=DESIRED_HEADING, val=245, time=120

  event = var=DESIRED_SPEED, val=2, time=125

  event = var=DESIRED_SPEED, val=0, time=225
  event = var=DESIRED_DEPTH, val=0, time=225

}

                                                               
ProcessConfig = pEchoVar
{
  AppTick   = 4
  CommsTick = 4
                                                                
  Echo    = DEPTH   ->  NAV_DEPTH
  Echo    = HEADING ->  NAV_HEADING
  Echo    = SPEED   ->  NAV_SPEED
}     

ProcessConfig = iCISCREA
{
  AppTick   = 4
  CommsTick = 4

	//Serial port 
  SERIAL_PORT = /dev/ttyUSB0
                                                                
  // Max number of retries before giving up
  MAX_MODBUS_RETRIES = 10
  MAX_TURNON_RETRIES = 100
                                                                
  // Lower and upper bound for motors deadzone
  FRRI_LO_DZ = 0
  RERI_LO_DZ = 0
  RELE_LO_DZ = 0
  FRLE_LO_DZ = 0
  VERT_LO_DZ = 0
  FRRI_UP_DZ = 0
  RERI_UP_DZ = 0
  RELE_UP_DZ = 0
  FRLE_UP_DZ = 0
  VERT_UP_DZ = 0
                                                                
  // Motors' sens of rotation (when the motor value is positive, motors should push water away from the body.
  FRRI_SENS = -1
  RERI_SENS = -1
  RELE_SENS = 1
  FRLE_SENS = -1
  VERT_SENS = -1

  DEPTH_OFFSET = -0.02
}

ProcessConfig = pMarinePID
{
  AppTick    = 5
  CommsTick  = 5
  
  tardy_helm_threshold = 100.0                                    
  tardy_nav_threshold  = 100.0

  VERBOSE       = true
  DEPTH_CONTROL = true
  ACTIVE_START  = true
  
  // Yaw PID controller
  YAW_PID_KP             = 0.02
  YAW_PID_KD             = 0.5
  YAW_PID_KI             = 0.0
  YAW_PID_INTEGRAL_LIMIT = 0.07
  
  // Speed PID controller
  SPEED_PID_KP           = 0.01
  SPEED_PID_KD           = 0.0
  SPEED_PID_KI           = 0.0
  SPEED_PID_INTEGRAL_LIMIT = 0.07
  
  //Pitch PID controller
  PITCH_PID_KP                   = 1.0
  PITCH_PID_KD                   = 1.0
  PITCH_PID_KI                   = 0
  PITCH_PID_INTEGRAL_LIMIT       = 0

  //ZPID controller
  Z_TO_PITCH_PID_KP              = 7.0
  Z_TO_PITCH_PID_KD              = 0
  Z_TO_PITCH_PID_KI              = 0.00
  Z_TO_PITCH_PID_INTEGRAL_LIMIT  = 0.05

  // Maximums
  MAXRUDDER   = 3
  MAXTHRUST   = 100
  MAXPITCH    = 50
  MAXELEVATOR = 100
  
  // A non-zero SPEED_FACTOR overrides use of SPEED_PID
  // Will set DESIRED_THRUST = DESIRED_SPEED * SPEED_FACTOR
  SPEED_FACTOR = 15
}

ProcessConfig = iSonar
{
  AppTick   = 4
  CommsTick = 4

  SERIAL_PORT_NAME = /dev/ttyUSB2
  RANGE = 75 //IN METERS
  NBINS = 100 //NUMBER OF SAMPLES PER SCANLINE
  ANGLESTEP = 2.7 //ANGULAR RESOLUTION (MUST BE A MULTIPLE OF 0.09)
  GAIN = 70 // MUST BE BETWEEN 0 AND 100 (PERCENTAGE)
  CONTINUOUS = true //TRUE FOR 360  ROTATION. SET RIGHT AND LEFT LIMIT IF FALSE 
  //LEFTLIMIT = 70.0 //IN DEGREES. ONLY WHEN CONTINUOUS IS FALSE
  //RIGHTLIMIT = 110.0 //IN DEGREES. ONLY WHEN CONTINUOUS IS FALSE
}

ProcessConfig = iIMU_RazorAHRS
{
  AppTick   = 4
  CommsTick = 4

  SERIAL_PORT = /dev/ttyUSB1

  MODE = ANGLES_CALIBRATED_SENSOR_DATA
       // RAW_SENSOR_DATA
       // CALIBRATED_SENSOR_DATA
       // ANGLES_CALIBRATED_SENSOR_DATA
       // ANGLES_RAW_SENSOR_DATA
       // ANGLES
}

ProcessConfig = iEchoSounder
{
  AppTick   = 4
  CommsTick = 4
  
  SERIAL_PORT_NAME = /dev/ttyUSB4
}

ProcessConfig = pCameraLogger_SIDE
{
   AppTick   = 4
   CommsTick = 4
  VARIABLE_IMAGE_NAME = CAMERA_SIDE
  DISPLAY_IMAGE = false
  SAVE_IN_FOLDER = ./
  IMAGE_NAME_PATTERN = SIDE_%06d.jpg
}



ProcessConfig = pCameraLogger_BOTTOM
{
   AppTick   = 4
   CommsTick = 4
  VARIABLE_IMAGE_NAME = CAMERA_BOTTOM
  DISPLAY_IMAGE = false
  SAVE_IN_FOLDER = ./
  IMAGE_NAME_PATTERN = BOTTOM_%06d.jpg
}

ProcessConfig = pLogger
{
  AppTick   = 8
  CommsTick = 8

  File = VICI_data

  SyncLog = false
  AsyncLog = true

  PATH     = ./


  LogAuxSrc = true
  WildCardLogging = true
  WildCardPattern = *
  WildCardOmitPattern = *_STATUS
  WildCardOmitPattern = *_DEBUG
  WildCardOmitPattern = *CAMERA_BOTTOM*
  WildCardOmitPattern = *CAMERA_SIDE*
  //WildCardExclusionLog = true
}

ProcessConfig = pSauceCSV
{
   AppTick   = 1
   CommsTick = 5
   
   LOGS_FOLDER = ./
}

ProcessConfig = iCamera_BOTTOM
{
  VARIABLE_IMAGE_NAME = CAMERA_BOTTOM
  IDENTIFIANT_CV_CAMERA = 0
  DISPLAY_IMAGE = false
  INVERT_IMAGE = true
}

ProcessConfig = iCamera_SIDE
{
  VARIABLE_IMAGE_NAME = CAMERA_SIDE
  IDENTIFIANT_CV_CAMERA = 1
  DISPLAY_IMAGE = false
  INVERT_IMAGE = false
}

ProcessConfig = pShare
{
  Input = route=multicast_1

  Output = src_name=CISCREA_ON, route=multicast_1
  Output = src_name=DEPTH, route=multicast_1
  Output = src_name=VOLTAGE_BATT1, route=multicast_1
  Output = src_name=VOLTAGE_BATT2, route=multicast_1
  Output = src_name=HEADING, route=multicast_1
  Output = src_name=DESIRED_HEADING, route=multicast_1
  Output = src_name=DESIRED_THRUST, route=multicast_1
  Output = src_name=DESIRED_RUDDER, route=multicast_1
  Output = src_name=DESIRED_DEPTH, route=multicast_1
  Output = src_name=DESIRED_ELEVATOR, route=multicast_1

}
